ROUTINE Training.QuickStart

/// do hello^Training.QuickStart
hello ;
    write !, "hello world" ///do ^Training.Hello
    write !, "bye"
end quit  ; end

/// do fibonacci^Training.QuickStart
fibonacci ; generate Fibonacci sequences
    read !, "Generate Fibonacci sequence up to where? ", upto
    set t1 = 1, t2 = 1, fib = 1
    write !
    do {
        write fib,"  "  set fib = t1 + t2, t1 = t2, t2 = fib
    }
    while ( fib '> upto )

    set t1 = 1, t2 = 1, fib = 1
    write !
    while ( fib '> upto ) {
        write fib,"  "  set fib = t1 + t2, t1 = t2, t2 = fib
    }

/// do forexample^Training.QuickStart
forexample ; examples of the for construct
    for i = 1:1:8 {
        write !, "I ", i, " the sandbox."
    }
    write !!
    for b = "John", "Paul", "George", "Ringo" {
        write !, "Was ", b, " the leader? "
        read yn
    }
    for i = 1:1 {
    read !, "Capital of MA? ", a
    if a = "BOSTON" {
        write "...did it in ", i, " tries"
        quit
        }
    }
    write !!
    for {
        read !, "Know what? ", wh
        quit:(wh = "NO!")
        write "   That's what!"
    }

/// set surv = 3
/// write $case(surv, 1:"Rich", 2:"Kelly", 3: "Rudy", 4:"Sue", :"")
/// do $case(surv, 1:celebrate^Training.QuickStart, :complain^Training.QuickStart )
survivor ; celebrate or complain
celebrate() PUBLIC
    { Write !, "Yippee! I won!" }

complain() PUBLIC
    { write !, "Oh well, I lost." }